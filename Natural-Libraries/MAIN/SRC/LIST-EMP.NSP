* >Natural Source Header 000000
* :Mode S
* :CP
* :LineIncrement 10
* <Natural Source Header
************************************************************************
/** List employee records by personnel id.
**
/** <p>The input to the program is a file located at
/** <code>/tmp/service.in</code>.</p>
**
/** <p>The input can contain the s={start} and n={number} options.
/** Where {start} is an integer specifying the number of records to
/** skip before the first record to be returned. And {number} is an
/** integer specifying the number of records to be returned.</p>
**
/** :author Mike Trout on 20 Feb 2019
**
************************************************************************
DEFINE DATA
LOCAL
*
* Views
*
1 EMPLOYEES VIEW OF EMPLOYEES
  2 PERSONNEL-ID
  2 FIRST-NAME
  2 MIDDLE-NAME
  2 NAME
*
1 SKIP VIEW OF EMPLOYEES
  2 PERSONNEL-ID
*
* Variables
*
1 #A (A) DYNAMIC
1 #A-JSON (A) DYNAMIC
1 #A-PARAMETERS (A/1:*) DYNAMIC
1 #A-SERVICE-IN (A) DYNAMIC
*
1 #I (I4)
1 #I-NUMBER (I4)
1 #I-START (I4)
*
1 #P-START-ISN (P10)
*
END-DEFINE
*
/* Read the service input
DEFINE WORK FILE 1 '/tmp/service.in' TYPE 'UNFORMATTED'
READ WORK FILE 1 ONCE #A-SERVICE-IN
CLOSE WORK FILE 1
*
/* Split service input into parameters
EXAMINE #A-SERVICE-IN FOR H'0A' GIVING NUMBER #I
ADD 1 TO #I
EXPAND ARRAY #A-PARAMETERS TO (1:#I)
SEPARATE #A-SERVICE-IN INTO #A-PARAMETERS(*) WITH DELIMITER H'0A'
*
/* Get the start and number parameter values
FOR #I 1 TO *OCC(#A-PARAMETERS)
  DECIDE FOR FIRST CONDITION
    WHEN #A-PARAMETERS(#I) = MASK('s=')
      ASSIGN #A = SUBSTRING(#A-PARAMETERS(#I), 3)
      ASSIGN #I-START = VAL(#A)
    WHEN #A-PARAMETERS(#I) = MASK('n=')
      ASSIGN #A = SUBSTRING(#A-PARAMETERS(#I), 3)
      ASSIGN #I-NUMBER = VAL(#A)
    WHEN NONE
      IGNORE
  END-DECIDE
END-FOR
*
/* Default start parameter value if it was not set
IF #I-START = 0
  ASSIGN #I-START = 1
END-IF
*
/* Default number parameter value if it was not set
IF #I-NUMBER = 0
  FN-EMPLOYEES. FIND NUMBER EMPLOYEES WITH PERSONNEL-ID NE ' '
  ASSIGN #I-NUMBER = *NUMBER(FN-EMPLOYEES.)
END-IF
*
/* Skip a number of records until the start parameter
ASSIGN #I = #I-START - 1
RESET SKIP.PERSONNEL-ID #P-START-ISN
RE-SKIP. READ (#I) MULTI-FETCH ON SKIP BY PERSONNEL-ID
  ASSIGN #P-START-ISN = *ISN(RE-SKIP.)
END-READ /* RE-SKIP.
*
/* Read the number of records specified by the number parameter
/* starting with the record after the start parameter and format
/* the output
COMPRESS FULL '{ '-H'22'-'employees'-H'22'-':[ ' INTO #A-JSON
READ (#I-NUMBER) MULTI-FETCH ON EMPLOYEES BY PERSONNEL-ID
    FROM SKIP.PERSONNEL-ID STARTING WITH ISN = #P-START-ISN
  COMPRESS FULL #A-JSON '{ '-
    H'22'-'personnelId'-H'22'-':'-H'22'
    *TRIM(EMPLOYEES.PERSONNEL-ID) H'22'-', '-
    H'22'-'firstName'-H'22'-':'-H'22'
    *TRIM(EMPLOYEES.FIRST-NAME) H'22'-', '-
    H'22'-'middleName'-H'22'-':'-H'22'
    *TRIM(EMPLOYEES.MIDDLE-NAME) H'22'-', '-
    H'22'-'lastName'-H'22'-':'-H'22'
    *TRIM(EMPLOYEES.NAME) H'22'-' }, '
    INTO #A-JSON LEAVING NO
END-READ
EXAMINE DIRECTION BACKWARD #A-JSON FOR ',' AND DELETE FIRST
COMPRESS FULL #A-JSON '] }' INTO #A-JSON LEAVING NO
*
/* Write the service output
DEFINE WORK FILE 1 '/tmp/service.out' TYPE 'UNFORMATTED'
WRITE WORK FILE 1 VARIABLE #A-JSON
CLOSE WORK FILE 1
*
END
